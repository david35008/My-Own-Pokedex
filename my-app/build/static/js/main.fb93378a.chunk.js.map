{"version":3,"sources":["SearchPokemon.js","App.js","index.js"],"names":["SearchPokemon","props","useState","id","setId","createNewPokemon","name","height","weight","image","over","types","typesList","setInputValue","inputRef","current","focus","typesContainer","forEach","element","index","push","key","className","onClick","a","setShow","axios","get","indexOf","pokemonsList","clone","data","pokemon","showPokemon","setPokemonSameType","setReasault","string","charAt","toUpperCase","slice","capitalize","Number","alt","src","onMouseOver","event","target","onMouseOut","getPokemon","pokeIdentifier","defaults","baseURL","then","response","catch","searchValue","pokemonTypes","urlListSameType","type","url","sprites","front_default","back_default","useRef","ref","onChange","value","inputValue","toString","App","reasault","show","pokemonSameType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb93378a.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction SearchPokemon(props) {\r\n\r\n\r\nconst [id, setId] = useState()\r\n\r\nfunction capitalize(string) {\r\n    if (typeof string === typeof \"\") {\r\n      let newString = string.charAt(0).toUpperCase() + string.slice(1);\r\n      return newString\r\n    }\r\n  }\r\n\r\n\r\nfunction createNewPokemon(name, height, weight, image, over, types, typesList, id) {\r\n    props.setInputValue('')\r\n    inputRef.current.focus()\r\n    let typesContainer = [];\r\n  types.forEach((element, index) => {\r\n    typesContainer.push(\r\n      <li key={element+index} className='pokemonType' onClick={async () => {\r\n        props.setShow(true);\r\n        let pokemonsList = await axios.get(typesList[types.indexOf(element)]);\r\n        let clone = []\r\n        pokemonsList.data.pokemon.forEach((element, index) => {\r\n          clone.push(\r\n            <li key={element+index} className='pokemonListItem' onClick={() => showPokemon(element.pokemon.name)}  >{element.pokemon.name}  </li>\r\n          )\r\n        })\r\n        props.setPokemonSameType(clone)\r\n      }} >{element}</li>\r\n    )\r\n  })\r\n\r\n  props.setReasault(\r\n    <div className='pokemonContainer' >\r\n      <div className='pokemonsname' >Name:{capitalize(name)}</div>\r\n      <div className='pokemonsheight' >Height: <br /> {Number(height) * 10}cm</div>\r\n      <div className='pokemonsweight' >weight: <br /> {Number(weight) / 10}kg</div>\r\n      <img className='pokemonsimage' alt={name} src={image} onMouseOver={event => event.target.src = over} onMouseOut={event => event.target.src = image}></img>\r\n      <ul className='pokemonTypesList' >Types:{typesContainer}</ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n    function getPokemon(pokeIdentifier) {\r\n        axios.defaults.baseURL = 'https://pokeapi.co/api/v2';\r\n        let pokemonData = axios.get(pokeIdentifier)\r\n            .then(response => response.data)\r\n            .catch(() => props.setReasault(<div className='notfound' >\"Pokemon not found\"</div>))\r\n        return pokemonData;\r\n    }\r\n\r\n    async function showPokemon(searchValue = 1) {\r\n        props.setShow(false);\r\n        const data = await getPokemon(`/pokemon/${searchValue}`)\r\n        let pokemonTypes = [];\r\n        let urlListSameType = [];\r\n        try {\r\n            data.types.forEach(element => {\r\n                pokemonTypes.push(element.type.name);\r\n                urlListSameType.push(element.type.url);\r\n            })\r\n        } catch { return }\r\n        setId(data.id)\r\n        createNewPokemon(data.name, data.height, data.weight, data.sprites.front_default, data.sprites.back_default, pokemonTypes, urlListSameType);\r\n\r\n    };\r\n\r\n    const nextPokemon = () => {\r\n        if (id < 806) {\r\n            showPokemon((id + 1).toString())\r\n        }\r\n    }\r\n\r\n    const prevPokemon = () => {\r\n        if (id > 1) {\r\n            showPokemon((id - 1).toString())\r\n        }\r\n    }\r\n \r\n    const inputRef = useRef();\r\n    \r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <input id='searchInputBox' ref={inputRef} onChange={event => {props.setInputValue(event.target.value)}} value={props.inputValue} ></input>\r\n            <button id='searchButon' onClick={() => {showPokemon(props.inputValue)}} ></button>\r\n            <button id='nextPokemon' onClick={() => { nextPokemon() }}></button>\r\n             <button id='previosPokemon' onClick={() => { prevPokemon()}} ></button> \r\n            <label id=\"whatToDO\">You can type name \\ number:</label>\r\n            <div id=\"firstLed\" className=\"firstLedBackround\"></div>\r\n            <div id=\"secondLed\" className=\"secondLedBackround\"></div>\r\n        </>\r\n    )\r\n\r\n\r\n       \r\n     \r\n \r\n       \r\n\r\n\r\n}\r\nexport default SearchPokemon;","import React, { useState } from 'react';\r\nimport SearchPokemon from './SearchPokemon'\r\n\r\nfunction App() {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [reasault, setReasault] = useState('')\r\n  const [show, setShow] = useState(false)\r\n  const [pokemonSameType, setPokemonSameType] = useState([])\r\n\r\n  return (\r\n\r\n    <div id='resultsArea' >\r\n      <SearchPokemon setReasault={setReasault} setShow={setShow} setPokemonSameType={setPokemonSameType}  inputValue={inputValue} setInputValue={setInputValue}  />\r\n      {reasault}\r\n      {show &&\r\n        <ul className='pokemonList' >Pokemons:{pokemonSameType}</ul>\r\n      }\r\n\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n,\r\n  document.getElementById('pokedexContainer')\r\n);"],"sourceRoot":""}